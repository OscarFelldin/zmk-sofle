#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        vim_n_si: vim_n_I {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &tog 8>;
            label = "VIM_N_I";
        };

        vim_n_sa: vim_n_A {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &tog 8>;
            label = "VIM_N_A";
        };

        vim_n_o: vim_n_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp ENTER &tog 8>;
            label = "VIM_N_O";
        };

        vim_n_so: vim_n_O {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT_ARROW) &kp ENTER &kp UP_ARROW &tog 8>;
            label = "VIM_N_O";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC           &kp N1  &kp N2        &kp N3        &kp N4     &kp N5    &kp UP_ARROW     &kp N6  &kp N7         &kp N8     &kp N9   &kp N0         &tog 3
&kp TAB           &kp Q   &kp W         &kp E         &kp R      &kp T     &kp DOWN_ARROW   &kp Y   &kp U          &kp I      &kp O    &kp P          &kp BSLH
&kp LEFT_SHIFT    &kp A   &kp S         &kp D         &kp F      &kp G     &kp LEFT_ARROW   &kp H   &kp J          &kp K      &kp L    &kp SEMI       &kp APOS
&kp LEFT_CONTROL  &kp Z   &kp X         &kp C         &kp V      &kp B     &kp RIGHT_ARROW  &kp N   &kp M          &kp COMMA  &kp DOT  &kp FSLH       &kp ESC
&kp C_MUTE        &mo 4   &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &mo 1     &kp ENTER        &mo 2   &kp BACKSPACE  &kp ENTER  &tog 5   &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        arrows_fn_br_eq_- {
            bindings = <
&kp GRAVE   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &mmv MOVE_UP     &kp F6     &kp F7         &kp F8        &kp F9     &kp F10           &kp F11
&none       &none   &none   &none   &none   &none     &mmv MOVE_DOWN   &kp PG_UP  &kp PAGE_DOWN  &kp HOME      &kp END    &kp MINUS         &kp EQUAL
&trans      &none   &none   &none   &none   &none     &mmv MOVE_LEFT   &kp LEFT   &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &none   &none   &none   &none   &none     &mmv MOVE_RIGHT  &kp F12    &none          &none         &none      &none             &none
&kp C_MUTE  &trans  &none   &none   &none   &trans    &mkp LCLK        &none      &trans         &trans        &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        mouse_cbr_+_ {
            bindings = <
&kp TILDE  &none   &none           &none           &none            &none     &mmv MOVE_UP     &none      &none           &none           &none            &none      &none
&none      &none   &none           &msc SCRL_UP    &none            &none     &mmv MOVE_DOWN   &none      &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &kp UNDER  &kp PLUS
&none      &none   &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none     &mmv MOVE_LEFT   &mkp MCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LBRC   &kp RBRC
&none      &none   &none           &none           &none            &none     &mmv MOVE_RIGHT  &none      &none           &none           &none            &none      &none
&trans     &trans  &none           &none           &trans           &trans    &mkp LCLK        &trans     &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        swe {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans     &kp RA(W)
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp RA(P)  &kp RA(Q)
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        kb-func {
            bindings = <
&soft_off  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LCTRL  &kp LCTRL        &kp LCTRL             &kp LCTRL             &kp LCTRL     &kp LCTRL          &kp LCTRL
&kp LCTRL  &kp LCTRL       &kp LCTRL     &kp LCTRL     &sys_reset    &kp LCTRL       &kp LCTRL  &rgb_ug RGB_BRI  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &out OUT_TOG  &ext_power EP_TOG  &kp LCTRL
&kp LCTRL  &kp LCTRL       &kp LCTRL     &kp LCTRL     &kp LCTRL     &kp LCTRL       &kp LCTRL  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG       &bl BL_CYCLE          &bl BL_TOG    &kp LCTRL          &kp LCTRL
&kp LCTRL  &studio_unlock  &kp LCTRL     &kp LCTRL     &kp LCTRL     &bootloader     &kp LCTRL  &rgb_ug RGB_BRD  &kp LCTRL             &kp LCTRL             &kp LCTRL     &kp LCTRL          &kp LCTRL
&kp LCTRL  &kp LCTRL       &kp LCTRL     &kp LCTRL     &kp LCTRL     &kp LCTRL       &kp LCTRL  &kp LCTRL        &kp LCTRL             &kp LCTRL             &kp LCTRL     &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        vim_normal {
            display-name = "vim_normal";
            bindings = <
&kp ESC     &kp LCTRL  &kp LCTRL      &kp LCTRL      &kp LCTRL  &kp LCTRL       &kp UP_ARROW     &kp LCTRL  &kp LCTRL      &kp LCTRL     &kp LCTRL  &kp LCTRL  &tog 3
&none       &none      &kp LC(RIGHT)  &kp LC(RIGHT)  &none      &none           &kp DOWN_ARROW   &kp LC(C)  &kp LC(Z)      &tog 8        &vim_n_o   &kp LC(P)  &kp LCTRL
&mo 6       &tog 8     &kp S          &kp LC(X)      &kp LC(F)  &kp LCTRL       &kp LEFT_ARROW   &kp LEFT   &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp LCTRL  &kp LCTRL
&mo 7       &kp LCTRL  &kp BACKSPACE  &kp C          &kp V      &kp LC(LEFT)    &kp RIGHT_ARROW  &kp N      &kp LCTRL      &kp LCTRL     &kp LCTRL  &kp LC(F)  &kp ESC
&kp C_MUTE  &mo 4      &kp LCTRL      &kp LCTRL      &kp LCTRL  &mo 1           &kp ENTER        &mo 2      &kp BACKSPACE  &kp ENTER     &tog 3     &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        vim_normal_shift {
            display-name = "vim_normal_shift";
            bindings = <
&kp ESC           &kp N1  &kp N2        &kp N3        &kp N4     &kp N5    &kp UP_ARROW     &kp N6      &kp N7         &kp N8        &kp N9     &kp N0         &tog 3
&kp TAB           &kp Q   &kp W         &kp E         &kp R      &kp T     &kp DOWN_ARROW   &kp K_COPY  &kp K_UNDO     &tog 8        &vim_n_o   &kp K_PASTE    &kp BSLH
&kp LEFT_SHIFT    &tog 8  &kp S         &kp D         &kp F      &kp G     &kp LEFT_ARROW   &kp LEFT    &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp SEMI       &kp APOS
&kp LEFT_CONTROL  &kp Z   &kp X         &kp C         &kp V      &kp B     &kp RIGHT_ARROW  &kp N       &kp M          &kp COMMA     &kp DOT    &kp K_FIND     &kp ESC
&kp C_MUTE        &mo 4   &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &mo 1     &kp ENTER        &mo 2       &kp BACKSPACE  &kp ENTER     &tog 3     &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        vim_normal_ctrl {
            display-name = "vim_normal_ctrl";
            bindings = <
&kp ESC           &kp N1  &kp N2        &kp N3        &kp N4     &kp N5    &kp UP_ARROW     &kp N6      &kp N7         &kp N8        &kp N9     &kp N0         &tog 3
&kp TAB           &kp Q   &kp W         &kp E         &kp R      &kp T     &kp DOWN_ARROW   &kp K_COPY  &kp K_UNDO     &tog 8        &vim_n_o   &kp K_PASTE    &kp BSLH
&kp LEFT_SHIFT    &tog 8  &kp S         &kp D         &kp F      &kp G     &kp LEFT_ARROW   &kp LEFT    &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp SEMI       &kp APOS
&kp LEFT_CONTROL  &kp Z   &kp X         &kp C         &kp V      &kp B     &kp RIGHT_ARROW  &kp N       &kp M          &kp COMMA     &kp DOT    &kp K_FIND     &kp ESC
&kp C_MUTE        &mo 4   &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &mo 1     &kp ENTER        &mo 2       &kp BACKSPACE  &kp ENTER     &tog 3     &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        vim_insert {
            display-name = "vim_insert";
            bindings = <
&tog 5            &kp N1  &kp N2        &kp N3        &kp N4     &kp N5    &kp UP_ARROW     &kp N6  &kp N7         &kp N8     &kp N9   &kp N0         &tog 3
&kp TAB           &kp Q   &kp W         &kp E         &kp R      &kp T     &kp DOWN_ARROW   &kp Y   &kp U          &kp I      &kp O    &kp P          &kp BSLH
&kp LEFT_SHIFT    &kp A   &kp S         &kp D         &kp F      &kp G     &kp LEFT_ARROW   &kp H   &kp J          &kp K      &kp L    &kp SEMI       &kp APOS
&kp LEFT_CONTROL  &kp Z   &kp X         &kp C         &kp V      &kp B     &kp RIGHT_ARROW  &kp N   &kp M          &kp COMMA  &kp DOT  &kp FSLH       &tog 5
&kp C_MUTE        &mo 4   &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &mo 1     &kp ENTER        &mo 2   &kp BACKSPACE  &kp ENTER  &tog 5   &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
